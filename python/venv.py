"""21.09.2024."""

# 1. Что делает команда python -m venv venv?
#     - создает виртуальное окружение, изолированную
#       среду со своей копией интерпретатора и библиотек.
# 1.1 Что делает каждая команда в списке ниже?
#     - pip list список всех установленных в
#       текущем окружении Python пакетов.
#     - pip freeze > requirements.txt
#       создаёт файл requirements.txt, в который записываются
#       все установленные в текущем окружении пакеты с версиями.
#     - pip install -r requirements.txt
#       устанавливает все пакеты, перечисленные
#       в файле requirements.txt.
# 2. Что делает каждая команда в списке ниже?
#     - conda env list
#       список всех виртуальных окружений Conda на компьютере.
#     - conda create -n venv_name python=3.5
#       создаёт виртуальное окружение Conda с именем venv_name
#       и версией Python 3.5.
#     - conda env update -n env_name -f file.yml
#       обновляет виртуальное окружение Conda с именем env_name
#       из файла file.yml (список пакетов и их версий).
#     - conda activate venv_name
#       активирует виртуальное окружение Conda с именем venv_name.
#     - conda deactivate
#       выходит из виртуального окружение Conda.
#     - conda clean -a
#       удаляет все пакеты.
# 3. Скрин терминала
#     ![activating venv](2025-09-21_171339.png)
# 4. Как установить необходимые пакеты внутрь
#    виртуального окружения для conda/venv?
#    - pip install или conda install внутри окружения.
# 5. Что делают эти команды?
#    - pip freeze > requirements.txt
#      создаёт файл requirements.txt, в котором перечислены
#      все пакеты, установленные в текущем окружении.
#    - conda env export > environment.yml
#      создаёт файл environment.yml, в который записывается
#      текущее активное окружение Conda
#      со всеми пакетами и их версиями.
# 5.1 Скрин venv.
#     ![venv and dependencies](venv.png)
# 6. Что делают эти команды?
#     - pip install -r requirements.txt
#      устанавливает все пакеты, перечисленные в файле
#      requirements.txt, с указанными версиями.
#     - создаёт новое окружение Conda на основе
#       файла environment.yml
# 7. Что делают эти команды?
#    - pip list
#      список всех установленных в текущем окружении
#      пакетов и их версий.
#    - pip show
#      показывает подробную информацию об установленном пакете
#    - conda list
#      выводит список всех установленных пакетов в
#      текущем окружении Conda.
# 8. Где по умолчанию больше пакетов venv/pip или conda?
#    и почему дата сайнинисты используют conda?
#    - больше в conda из коробки.
#    - легко создавать окружения для всего ПК с
#      разными версиями Питон и пакетов.
# 9. вставьте скрин где будет видно, Выбор интерпретатора
#    Python (conda) в VS Code/cursor
#    ![venv_select](venv_select.png)
# 10. добавьте в .gitignore папку SENATOROV
#     - в .gitignore добавил SENATOROV/
# 11. Зачем нужно виртуально окружение?
#     - виртуальное окружение изолирует зависимости проекта,
#       чтобы они не конфликтовали с другими проектами
#       и глобальным Python.
# 12. С этого момента надо работать в виртуальном окружении conda,
#     ты научился(-ась) выгружать зависимости
#     и работать с окружением?
#     - да.
