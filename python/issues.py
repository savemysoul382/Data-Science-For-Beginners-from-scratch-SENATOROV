"""19.10.2025."""

# 1. Что такое Issues на GitHub и для чего они используются?
# Это задачи или обсуждения — способ отслеживать баги, улучшения, идеи, вопросы внутри проекта
#
# 2. Чем Issues отличаются от других инструментов управления задачами?
# Они встроены прямо в GitHub и связаны с кодом, коммитами и PR, без отдельной системы
#
# 3. Какие основные компоненты (поля) есть у каждого Issue?
# Заголовок, описание, метки, исполнитель, milestone, комментарии и статус
#
# 4. Как создать новое Issue в репозитории?
# Во вкладке Issues нажать “New issue”, заполнить заголовок и описание
#
# 5. Какие данные указывать в описании для лучшего понимания задачи?
# Как можно полнее описать проблему, что ожидалось, шаги воспроизведения, окружение, скриншоты, предложенное решение
#
# 6. Какие теги (labels) можно добавить к Issue? Какие стандартные?
# Например: bug, enhancement, documentation, dependencies, question, help wanted, question, wontfix
#
# 7. Как прикрепить Assignees (ответственных) к Issue?
# В правой панели секция Assignees, выбрать пользователя
#
# 8. Как использовать Labels для классификации задач?
# классифицировать задачи, по типу bug\feature, приоритету high\low или области проекта frontend\ backend
#
# 9. Для чего нужен Milestone, и как связать его с Issue?
# Milestone это этап, срок выполнения. Привязка позволяет группировать задачи по релизам
#
# 10. Как привязать Issue к пул-реквесту (Pull Request)?
# В описании ПР написать Closes #номер_issue или Fixes #номер_issue
#
# 11. Как добавить комментарий к существующему Issue?
# Открыть ишьюс и написать комментарий внизу страницы
#
# 12. Как закрыть Issue вручную?
# Кнопкой Close issue
#
# 13. Можно ли автоматически закрыть Issue с помощью коммита или PR? Как?
# Да, в сообщении коммита\PR написать fixes #номер, closes #номер или resolves #номер
#
# 14. Как повторно открыть закрытое Issue?
# Кнопкой Reopen issue внизу
#
# 15. Как найти все открытые или закрытые Issues?
# На вкладке Issues — выбрать фильтр is:open или is:closed
#
# 16. Как использовать фильтры для поиска по меткам, исполнителям и т.д.?
# В поиске писать запросы вроде label:bug assignee:username
#
# 17. Как сортировать Issues по приоритету, дате или другим параметрам?
# Вверху списка — меню Sort
#
# 18. Как настроить автоматические уведомления о новых или изменённых Issues?
# Подписаться watch на репозиторий или конкретный ишьюс
#
# 19. Что такое Projects, и как связать их с Issues?
# Projects — доска задач, где можно добавлять Issues как карточки
#
# 20. Какие сторонние инструменты можно использовать для автоматизации?
# Probot, GitHub Actions, Webhooks, Jira интеграции
#
# 21. Как упомянуть другого пользователя в комментарии к Issue?
# Через @username
#
# 22. Как запросить дополнительные данные или уточнения у автора Issue?
# Оставить комментарий с вопросом прямо в ишьюс
#
# 23. Что делать, если Issue неактуально или нужно объединить с другим?
# Закрыть его с пометкой “duplicate of #номер” или "non-actual"
#
# 24. Как использовать шаблоны для создания Issues?
# Создать файл .github/ISSUE_TEMPLATE.md или несколько шаблонов в .github/ISSUE_TEMPLATE/
#
# 25. Что такое Linked Issues, и как создать связь между задачами?
# Это связь между зависимыми задачами. Добавляется через “Linked issues” или путем упоминания других ишьюс
#
# 26. Какие метрики можно отслеживать с помощью Issues?
# Количество открытых/закрытых задач, время решения, активность участников
#
# 27. Какие best practices рекомендуются при работе с Issues?
# - Давать понятные заголовки и описания
# - Использовать метки и milestone
# - Закрывать дубликаты
# - Поддерживать обсуждения в теме ишьюса
# - Ссылаться на ПР и коммиты
